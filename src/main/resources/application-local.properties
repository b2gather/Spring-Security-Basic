# DB 설정
spring.datasource.url=${POSTGRESQL_URL:jdbc:postgresql://localhost:5432/spring-security-basic}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${POSTGRESQL_USER:postgres}
spring.datasource.password=${POSTGRESQL_PASS:pass}

# 엔티티에 맞게 테이블 업데이트
spring.jpa.hibernate.ddl-auto=update
# logging.level.org.hibernate.SQL=DEBUG로 대체(아래의 옵션들은 로그에도 적용됨)
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.highlight_sql=true

# SQL출력 (spring.jpa.properties.hibernate.show_sql 대신에 로그출력으로 사용을 권장)
logging.level.org.hibernate.SQL=debug
# SQL 바인딩 파라미터 확인 (hibernate 6용)
logging.level.org.hibernate.orm.jdbc.bind=trace
# SQL 바인딩 파라미터 확인 (hibernate 5용)
#logging.level.org.hibernate.type.descriptor.sql=trace
# 스프링 시큐리티 로그
logging.level.org.springframework.security=trace

# thymeleaf에 대한 캐시를 남기지 않는다. cache=false 설정(운영시는 true)
spring.thymeleaf.cache = false
